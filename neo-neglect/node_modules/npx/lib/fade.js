var hw = process.binding('hw'); // Comment this and promisifyAnimation out to run tests
var utils = require('./utils');
var events = require('events');
var Q = require('kew');
var Animation = require('./animation');

var neopixels = 120;
var buffer_length = neopixels * 3;
var buffer = new Buffer(buffer_length);

function fadeTo(color){
  var frames = 10;
  var color1 = [0,0,0];
  var color2 = utils.convertToRGB(color);
  var rate = calculateRate(color1, color2);
  var currentColor = color1;
  var index = 0;

  process.on('neopixel_animation_complete', function(){
    index++;
    if(index < frames){
      fade(currentColor);
      fill(currentColor);
      hw.neopixel_animation_buffer(buffer_length, buffer)
    } else{
      console.log('done');
    }
  });
  console.log('start');
  fill(currentColor);
  hw.neopixel_animation_buffer(buffer_length, buffer);

  function fill (color){
    for (var i = 0; i < neopixels; i++) {
      buffer[i*3]   = color[0];
      buffer[i*3+1] = color[1];
      buffer[i*3+2] = color[2];
    }
  }

  function calculateRate (color1, color2){
    var rate = [0,0,0];
    for (var i = 0; i < color1.length; i++) {
      rate[i] = Math.floor( (color2[i] - color1[i]) / frames );
    }
   return rate;
  }

  function fade (color) {
    for (var i = 0; i < color.length; i++) {
      color[i] += rate[i]
    }
  }
}

fadeTo([0x10, 0x00, 0x10]);
